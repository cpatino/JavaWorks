/**
 * 
 */
package co.com.carp.petcity.view;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.util.Calendar;
import java.util.Observable;
import java.util.Set;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

import net.sourceforge.jdatepicker.JDatePicker;
import net.sourceforge.jdatepicker.impl.JDatePanelImpl;
import net.sourceforge.jdatepicker.impl.JDatePickerImpl;
import net.sourceforge.jdatepicker.impl.UtilCalendarModel;

/**
 * This class is attempt to be a model to build all {@link JPanel}(s) that 
 * will display information in a tabular way.
 * 
 * @author Carlos Rodriguez
 */
public abstract class TableDataStructure extends TableStructure {
	
	public TableDataStructure(Set<?> objectSet) {
		super(objectSet);
	}

	/**
	 * It will be used as a label when a {@link JDatePicker} is being displayed.
	 */
	private static String SELECT_DATE_TEXT = "Fecha de aplicación:";
	
	/**
	 * The set of objects to be displayed;
	 */
	private Set<?> objectSet;
	
	/**
	 * The columns name from table.
	 */
	private String columnNames[];
	
	
	/**
	 * Label that will describe the information that is required to be filled.
	 */
	private JLabel jlbDescription;
	
	/**
	 * Text field with description or name about the action that will be stored on 
	 * database.
	 */
	private JTextField jtfDescription;
	
	/**
	 * Date picker to select date from application.
	 */
	private JDatePickerImpl jdcApplicationDate;
	
	/**
	 * Button to add new information to database.
	 */
	private JButton jbtAdd;
	
	/**
	 * {@link JPanel} with all components to be displayed.
	 */
	private JPanel jpTabPanel;
	
	/**
	 * @return the objectSet
	 */
	public Set<?> getObjectSet() {
		return objectSet;
	}

	/**
	 * @param objectSet the objectSet to set
	 */
	public void setObjectSet(Set<?> objectSet) {
		this.objectSet = objectSet;
	}

	/**
	 * @return the columnNames
	 */
	public String[] getColumnNames() {
		return columnNames;
	}

	/**
	 * Sets text to description label.
	 * 
	 * @param description the description to be set on {@link JLabel}.
	 */
	public void setJlbDescriptionText(String description) {
		this.jlbDescription.setText(description);
	}
	
	/**
	 * @param columnNames the columnNames to set
	 */
	public void setColumnNames(String[] columnNames) {
		this.columnNames = columnNames;
	}	
	
	/**
	 * It will return main panel that will contains a tab to display information
	 * and a button to add a new element.
	 * 
	 * @return {@link JPanel} with two sections: <br>
	 * 1- Section to fill data and allowing add new info to database.<br>
	 * 2- Section with a tab with already filled information.
	 */
	public JPanel getTabPanel() {		
		return jpTabPanel;
	}
	
	/**
	 * Creates a panel with components to add new information
	 * 
	 * @return {@link JPanel} to be displayed.
	 */
	private JPanel createFillInfoPanel() {
		JPanel jpnFillInfo = new JPanel(null);
		jpnFillInfo.setPreferredSize(new Dimension(400, 100));
		Font verdanaBold = new Font("Verdana", Font.BOLD, 12);
		
		this.jlbDescription = new JLabel();
		jlbDescription.setBounds(10, 10, 80, 20);
		jlbDescription.setFont(verdanaBold);		
		this.jtfDescription = new JTextField();
		this.jtfDescription.setBounds(80, 10, 230, 20);
		this.jtfDescription.setFont(new Font("Verdana", Font.PLAIN, 12));
		
		JLabel jlbProgramatedDate = new JLabel(SELECT_DATE_TEXT);
		jlbProgramatedDate.setBounds(10, 40, 150, 20);
		jlbProgramatedDate.setFont(verdanaBold);
		jdcApplicationDate = new JDatePickerImpl(new JDatePanelImpl(new UtilCalendarModel()));
		jdcApplicationDate.getModel().setDate(Calendar.getInstance().get(Calendar.YEAR), 
				Calendar.getInstance().get(Calendar.MONTH), 
				Calendar.getInstance().get(Calendar.DAY_OF_MONTH));
		ImageIcon icon = new ImageIcon(this.getClass().getResource("/co/com/carp/petcity/image/calendar.png")); 
		((JButton)jdcApplicationDate.getComponent(1)).setIcon(icon);
		((JButton)jdcApplicationDate.getComponent(1)).setText("");
		((Component) jdcApplicationDate).setBounds(160, 40, 150, 25);
		
		
		icon = new ImageIcon(this.getClass().getResource("/co/com/carp/petcity/image/disk_blue.png"));
		this.jbtAdd = new JButton(icon);
		this.jbtAdd.setBounds(315, 10, 60, 55);
		this.jbtAdd.addActionListener(this);
		
		jpnFillInfo.add(jlbDescription);
		jpnFillInfo.add(jtfDescription);
		jpnFillInfo.add(jlbProgramatedDate);
		jpnFillInfo.add((Component) jdcApplicationDate);
		jpnFillInfo.add(jbtAdd);
		
		return jpnFillInfo;
	}
	
	/**
	 * Creates a scroll pane that will contains the table.
	 * 
	 * @return {@link JScrollPane} to be displayed.
	 */
	private JScrollPane createScrollPanel() {
		TableModel model = this.createTableModel();
	    JTable table = new JTable(model); 

	    TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
	    table.setRowSorter(sorter);

	    JScrollPane scrollPane = new JScrollPane(table);
	    scrollPane.setPreferredSize(new Dimension(400, 400));
	    return scrollPane;
	}
	
	/**
	 * Creates table model that will be used to display information 
	 * correctly.
	 * 
	 * @return {@link TableModel} that will be used to display table.
	 */
	protected abstract TableModel createTableModel();

}
